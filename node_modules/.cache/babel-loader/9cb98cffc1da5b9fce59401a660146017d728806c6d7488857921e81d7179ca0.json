{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\random-quote-machine\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport QuoteBox from './components/QuoteBox';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [quote, setQuote] = useState('');\n  const [author, setAuthor] = useState('');\n  const fetchQuote = async () => {\n    try {\n      const response = await axios.get('https://api.quotable.io/random');\n      setQuote(response.data.content);\n      setAuthor(response.data.author);\n    } catch (error) {\n      console.error('Error fetching the quote', error);\n    }\n  };\n  useEffect(() => {\n    fetchQuote();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(QuoteBox, {\n      quote: quote,\n      author: author,\n      onNewQuote: fetchQuote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uAT/nb434hxg5DOW/0KtafH4Yrk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","QuoteBox","jsxDEV","_jsxDEV","App","_s","quote","setQuote","author","setAuthor","fetchQuote","response","get","data","content","error","console","className","children","onNewQuote","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Projects/random-quote-machine/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport QuoteBox from './components/QuoteBox'\nimport './App.css';\n\nfunction App() {\n  const [quote, setQuote] = useState('');\n  const [author, setAuthor] = useState('');\n\n  const fetchQuote = async () => {\n    try {\n      const response = await axios.get('https://api.quotable.io/random');\n      setQuote(response.data.content);\n      setAuthor(response.data.author);\n    } catch (error) {\n      console.error('Error fetching the quote',error);\n    }\n  }\n  useEffect(() => {\n    fetchQuote();\n  }, []);\n\n  return (\n    <div className=\"App\">\n    <QuoteBox \n      quote={quote}\n      author={author}\n      onNewQuote={fetchQuote}\n    />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,gCAAgC,CAAC;MAClEL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/BL,SAAS,CAACE,QAAQ,CAACE,IAAI,CAACL,MAAM,CAAC;IACjC,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAACA,KAAK,CAAC;IACjD;EACF,CAAC;EACDjB,SAAS,CAAC,MAAM;IACdY,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,eACpBf,OAAA,CAACF,QAAQ;MACPK,KAAK,EAAEA,KAAM;MACbE,MAAM,EAAEA,MAAO;MACfW,UAAU,EAAET;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEV;AAAClB,EAAA,CA1BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}